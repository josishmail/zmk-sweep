/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define DEFAULT 0
#define SYM 1
#define EXT 2
#define NUM 3
#define SETTINGS 4
// -----------------

#define TRANS_MOD(KEYCODE, LABEL) \
    LABEL: LABEL { \
        compatible = "zmk,behavior-mod-morph"; \
        label = #LABEL ; \
        #binding-cells = <0>; \
        bindings = <&kp KEYCODE>, <&trans>; \
        mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>; \
        keep-mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>; \
    }

&sk {
    quick-release; // Release sticky keys on next key-press
    ignore-modifiers; // sticky keys combine, instead of releasing previously pressed sticky keys
};

// For new keyboard design
&kscan0 {
    input-gpios
    = <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    , <&pro_micro  1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
    ;
};

/ {

    behaviors {
        td_settings: tap_dance_settings {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SETTINGS";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&none>, <&none>, <&tog SETTINGS>;
        };

        TRANS_MOD(TILDE, tilde_trans);
        TRANS_MOD(LBKT, lbkt_trans);
        TRANS_MOD(LBRC, lbrc_trans);
        TRANS_MOD(LPAR, lpar_trans);
        TRANS_MOD(LT, lt_trans);
        TRANS_MOD(GRAVE, grave_trans);
        TRANS_MOD(STAR, star_trans);
        TRANS_MOD(EQUAL, equal_trans);
        TRANS_MOD(UNDER, under_trans);
        TRANS_MOD(PLUS, plus_trans);
        TRANS_MOD(HASH, hash_trans);
        TRANS_MOD(CARET, caret_trans);
        TRANS_MOD(AT, at_trans);
        TRANS_MOD(AMPS, amps_trans);
        TRANS_MOD(MINUS, minus_trans);
        
        TRANS_MOD(PG_UP, pg_up_trans);
        TRANS_MOD(HOME, home_trans);
        TRANS_MOD(UP, up_trans);
        TRANS_MOD(END, end_trans);
        TRANS_MOD(DEL, del_trans);
        TRANS_MOD(PG_DN, pg_dn_trans);
        TRANS_MOD(LEFT, left_trans);
        TRANS_MOD(DOWN, down_trans);
        TRANS_MOD(RIGHT, right_trans);
        TRANS_MOD(PRCNT, prcnt_trans);
        TRANS_MOD(DLLR, dllr_trans);
        TRANS_MOD(COLON, colon_trans);
    };
    macros {
        // reset all sticky modifiers
        ZMK_MACRO(unstick_macro,
            wait-ms = <0>;
            tap-ms = <40>;
            bindings = <&macro_release &kp LSHIFT &kp LCTRL &kp LALT &kp RSHIFT &kp RCTRL &kp RALT &kp LCMD &kp RCMD>;
        )
        ZMK_MACRO(clear_bluetooth_macro,
            wait-ms = <0>;
            tap-ms = <40>;
            bindings = <&macro_release &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3>;
        )
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYM EXT>;
            then-layer = <NUM>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base layer
        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R   &kp T             &kp Y     &kp U &kp I     &kp O   &kp P 
                &kp A &kp S &kp D &kp F   &kp G             &kp H     &kp J &kp K     &kp L   &kp SEMI
                &kp Z &kp X &kp C &kp V   &kp B             &kp N     &kp M &kp COMMA &kp DOT &kp SQT
                                  &mo EXT &kp BSPC          &kp SPACE &mo SYM
            >;
        };

        // symbols
        sym_layer {
            bindings = <
                &tilde_trans &lbkt_trans &lbrc_trans  &lpar_trans  &lt_trans             &kp GT   &kp RPAR  &kp RBRC  &kp RBKT  &kp PIPE
                &grave_trans &star_trans &equal_trans &under_trans &plus_trans           &sk LCMD &sk LALT  &sk LSHFT &sk LCTRL &kp ENTER
                &hash_trans  &dllr_trans &colon_trans &amps_trans  &minus_trans          &kp EXCL &kp QMARK &kp BSLH  &kp DQT   &kp FSLH
                                                      &trans       &trans                &trans   &trans
            >;
        };

        // Main modifiers and arrow keys
        ext_layer {
            bindings = <
                &kp ESC  &kt RCTRL  &kt RSHFT &kt RALT  &kt RCMD       &pg_up_trans  &home_trans     &up_trans       &end_trans      &del_trans
                &kp TAB  &sk LCTRL  &sk LSHFT &sk LALT  &sk LCMD       &pg_dn_trans  &left_trans     &down_trans     &right_trans    &prcnt_trans
                &kp LG(Z) &kp LG(X) &kp LG(C) &kp LG(V) &unstick_macro &trans        &trans          &trans          &at_trans       &caret_trans
                                              &trans    &trans              &trans    &trans
            >;
        };

        // numbers and function keys
        num_layer {
            bindings = <
                &kp N1 &kp N2    &kp N3    &kp N4   &kp N5              &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
                &none  &sk RCTRL &sk RSHFT &sk RALT &sk RCMD            &kp F1 &kp F2 &kp F3 &kp F4 &kp F5
                &none  &none     &kp F11   &kp F12  &td_settings		&kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
                                           &trans   &trans              &trans &trans  
            >;
        };

        settings_layer {
            bindings = <
                &kp PSCRN  &kp INS  &kp SLCK &kp PAUSE_BREAK &none                 &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR      &clear_bluetooth_macro
                &none      &none    &none    &none           &sys_reset            &sys_reset    &kp C_VOL_DN    &kp C_VOL_UP    &kp C_BRI_DN    &kp C_BRI_UP
                &kp C_MENU &kp CAPS &none    &none           &bootloader		   &bootloader   &kp C_MUTE      &none           &out OUT_USB    &out OUT_BLE
                                             &none           &tog SETTINGS         &tog SETTINGS &none  
            >;
        };
    };
};
